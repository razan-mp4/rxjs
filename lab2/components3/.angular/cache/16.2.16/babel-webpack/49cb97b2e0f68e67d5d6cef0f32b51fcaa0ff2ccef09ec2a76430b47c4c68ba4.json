{"ast":null,"code":"// Importing FormsModule to enable two-way data binding with [(ngModel)]\nimport { FormsModule } from '@angular/forms';\n// Importing the standalone ChildComponent to use it in this component\nimport { ChildComponent } from './child.component';\nimport * as i0 from \"@angular/core\";\n// Defining a standalone Angular component\nlet AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    // Property to store the user's name, which is bound to the 'userName' input of the ChildComponent\n    name = \"Tom\"; // Default value is 'Tom'\n    static ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 2,\n      consts: [[3, \"userName\", \"userNameChange\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"child-comp\", 0);\n          i0.ɵɵlistener(\"userNameChange\", function AppComponent_Template_child_comp_userNameChange_0_listener($event) {\n            return ctx.name = $event;\n          });\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(1, \"div\");\n          i0.ɵɵtext(2);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"userName\", ctx.name);\n          i0.ɵɵadvance(2);\n          i0.ɵɵtextInterpolate1(\"\\u041E\\u0431\\u0440\\u0430\\u043D\\u0435 \\u0456\\u043C\\u2019\\u044F: \", ctx.name, \"\");\n        }\n      },\n      dependencies: [FormsModule, ChildComponent],\n      encapsulation: 2\n    });\n  }\n  return AppComponent;\n})();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}