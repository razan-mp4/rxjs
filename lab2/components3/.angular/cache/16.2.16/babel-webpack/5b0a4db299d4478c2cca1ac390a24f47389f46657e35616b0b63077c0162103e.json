{"ast":null,"code":"// Importing necessary Angular core functionalities\nimport { EventEmitter } from '@angular/core';\n// Importing FormsModule to enable two-way data binding\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nlet ChildComponent = /*#__PURE__*/(() => {\n  class ChildComponent {\n    // Input property to accept the initial name from the parent component\n    userName = \"\"; // Default value is an empty string\n    // Output property to emit changes to the 'userName' back to the parent component\n    userNameChange = new EventEmitter();\n    // Method that gets called when the input field value changes\n    onNameChange(model) {\n      this.userName = model; // Update the local 'userName' property\n      this.userNameChange.emit(model); // Emit the updated value to the parent component\n    }\n\n    static ɵfac = function ChildComponent_Factory(t) {\n      return new (t || ChildComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChildComponent,\n      selectors: [[\"child-comp\"]],\n      inputs: {\n        userName: \"userName\"\n      },\n      outputs: {\n        userNameChange: \"userNameChange\"\n      },\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 1,\n      vars: 1,\n      consts: [[3, \"ngModel\", \"ngModelChange\"]],\n      template: function ChildComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"input\", 0);\n          i0.ɵɵlistener(\"ngModelChange\", function ChildComponent_Template_input_ngModelChange_0_listener($event) {\n            return ctx.onNameChange($event);\n          });\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"ngModel\", ctx.userName);\n        }\n      },\n      dependencies: [FormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel],\n      encapsulation: 2\n    });\n  }\n  return ChildComponent;\n})();\nexport { ChildComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}