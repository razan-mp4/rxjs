{"ast":null,"code":"import { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nlet ChildComponent = /*#__PURE__*/(() => {\n  class ChildComponent {\n    // Input property to accept the 'name' value from the parent component\n    name = \"\"; // Default value is an empty string\n    // Counter to track the order of lifecycle hooks being called\n    count = 1;\n    // Lifecycle hook: Called once after the component is initialized\n    ngOnInit() {\n      this.log(`ngOnInit`); // Logs the lifecycle event\n    }\n    // Lifecycle hook: Called when any bound input property changes\n    ngOnChanges() {\n      this.log(`OnChanges`); // Logs the lifecycle event\n    }\n    // Lifecycle hook: Called during every change detection run\n    ngDoCheck() {\n      this.log(`ngDoCheck`); // Logs the lifecycle event\n    }\n    // Lifecycle hook: Called after Angular initializes the component's views and child views\n    ngAfterViewInit() {\n      this.log(`ngAfterViewInit`); // Logs the lifecycle event\n    }\n    // Lifecycle hook: Called after Angular checks the component's views and child views\n    ngAfterViewChecked() {\n      this.log(`ngAfterViewChecked`); // Logs the lifecycle event\n    }\n    // Lifecycle hook: Called after Angular projects external content into the component's view\n    ngAfterContentInit() {\n      this.log(`ngAfterContentInit`); // Logs the lifecycle event\n    }\n    // Lifecycle hook: Called after Angular checks the projected content\n    ngAfterContentChecked() {\n      this.log(`ngAfterContentChecked`); // Logs the lifecycle event\n    }\n    // Private helper method to log lifecycle hook calls with the counter\n    log(msg) {\n      console.log(this.count + \". \" + msg); // Logs the count and the message\n      this.count++; // Increments the counter for the next log\n    }\n\n    static ɵfac = function ChildComponent_Factory(t) {\n      return new (t || ChildComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: ChildComponent,\n      selectors: [[\"child-comp\"]],\n      inputs: {\n        name: \"name\"\n      },\n      standalone: true,\n      features: [i0.ɵɵNgOnChangesFeature, i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 1,\n      template: function ChildComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"p\");\n          i0.ɵɵtext(1);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(1);\n          i0.ɵɵtextInterpolate1(\"\\u041F\\u0440\\u0438\\u0432\\u0456\\u0442 \", ctx.name, \"\");\n        }\n      },\n      dependencies: [FormsModule],\n      encapsulation: 2\n    });\n  }\n  return ChildComponent;\n})();\nexport { ChildComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}