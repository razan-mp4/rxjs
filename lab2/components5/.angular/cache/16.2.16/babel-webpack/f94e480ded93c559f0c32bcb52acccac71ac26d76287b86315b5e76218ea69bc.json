{"ast":null,"code":"// Importing FormsModule to enable two-way data binding with [(ngModel)]\nimport { FormsModule } from '@angular/forms';\n// Importing the standalone ChildComponent for usage in this component\nimport { ChildComponent } from './child.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\n// Defining a standalone Angular component\nlet AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    // Property to store the user's name\n    name = \"Tom\"; // Default value is \"Tom\"\n    static ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 2,\n      vars: 2,\n      consts: [[3, \"name\"], [\"type\", \"text\", 3, \"ngModel\", \"ngModelChange\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelement(0, \"child-comp\", 0);\n          i0.ɵɵelementStart(1, \"input\", 1);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_1_listener($event) {\n            return ctx.name = $event;\n          });\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"name\", ctx.name);\n          i0.ɵɵadvance(1);\n          i0.ɵɵproperty(\"ngModel\", ctx.name);\n        }\n      },\n      dependencies: [FormsModule, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgModel, ChildComponent],\n      encapsulation: 2\n    });\n  }\n  return AppComponent;\n})();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}