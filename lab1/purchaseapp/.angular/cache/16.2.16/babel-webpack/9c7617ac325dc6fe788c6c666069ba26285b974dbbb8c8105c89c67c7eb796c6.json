{"ast":null,"code":"import { CommonModule } from '@angular/common'; // Required for Angular structural directives like *ngFor and *ngIf\nimport { FormsModule } from '@angular/forms'; // Required for two-way data binding using [(ngModel)]\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/common\";\nfunction AppComponent_tr_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\")(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6, \"--> \");\n    i0.ɵɵelement(7, \"input\", 12);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.purchase);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r1.price);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"checked\", item_r1.done);\n  }\n}\n// Class representing an item in the shopping list\nclass Item {\n  purchase; // Name of the item\n  done; // Whether the item has been purchased\n  price; // Price of the item\n  // Constructor to initialize the item with its name and price\n  constructor(purchase, price) {\n    this.purchase = purchase; // Assigns the item name\n    this.price = price; // Assigns the price\n    this.done = false; // Default: the item is not yet purchased\n  }\n}\n// Angular component definition\nlet AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    text = ''; // Input field for the name of the new item\n    price = 0; // Input field for the price of the new item\n    // Initial shopping list items\n    items = [{\n      purchase: 'Хліб',\n      done: false,\n      price: 15.9\n    }, {\n      purchase: 'Вершкове масло',\n      done: false,\n      price: 60\n    }, {\n      purchase: 'Картопля',\n      done: true,\n      price: 22.6\n    }, {\n      purchase: 'Сир',\n      done: false,\n      price: 310\n    } // Example item: cheese\n    ];\n    // Function to add a new item to the shopping list\n    addItem(text, price) {\n      // Validate the inputs\n      if (text == null || text.trim() === '' || price == null) return;\n      // Add a new item to the list\n      this.items.push(new Item(text, price));\n      // Optionally clear the inputs after adding the item\n      this.text = ''; // Clears the item name input\n      this.price = 0; // Resets the price input to 0\n    }\n\n    static ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)();\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      standalone: true,\n      features: [i0.ɵɵStandaloneFeature],\n      decls: 26,\n      vars: 3,\n      consts: [[1, \"page-header\"], [1, \"panel\"], [1, \"form-inline\"], [1, \"form-group\"], [1, \"col-md-8\"], [\"placeholder\", \"\\u041D\\u0430\\u0437\\u0432\\u0430\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-6\"], [\"type\", \"number\", \"placeholder\", \"\\u0426\\u0456\\u043D\\u0430\", 1, \"form-control\", 3, \"ngModel\", \"ngModelChange\"], [1, \"col-md-offset-2\", \"col-md-8\"], [1, \"btn\", \"btn-default\", 3, \"click\"], [1, \"table\", \"table-striped\"], [4, \"ngFor\", \"ngForOf\"], [\"type\", \"checkbox\", 3, \"checked\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\", 0)(1, \"h1\");\n          i0.ɵɵtext(2, \"Shopping list\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(3, \"div\", 1)(4, \"div\", 2)(5, \"div\", 3)(6, \"div\", 4)(7, \"input\", 5);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_7_listener($event) {\n            return ctx.text = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(8, \"div\", 3)(9, \"div\", 6)(10, \"input\", 7);\n          i0.ɵɵlistener(\"ngModelChange\", function AppComponent_Template_input_ngModelChange_10_listener($event) {\n            return ctx.price = $event;\n          });\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(11, \"div\", 3)(12, \"div\", 8)(13, \"button\", 9);\n          i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_13_listener() {\n            return ctx.addItem(ctx.text, ctx.price);\n          });\n          i0.ɵɵtext(14, \" \\u0414\\u043E\\u0434\\u0430\\u0442\\u0438 \");\n          i0.ɵɵelementEnd()()()();\n          i0.ɵɵelementStart(15, \"table\", 10)(16, \"thead\")(17, \"tr\")(18, \"th\");\n          i0.ɵɵtext(19, \"\\u041F\\u0440\\u0435\\u0434\\u043C\\u0435\\u0442\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(20, \"th\");\n          i0.ɵɵtext(21, \"\\u0426\\u0456\\u043D\\u0430\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"th\");\n          i0.ɵɵtext(23, \"\\u041A\\u0443\\u043F\\u043B\\u0435\\u043D\\u043E\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(24, \"tbody\");\n          i0.ɵɵtemplate(25, AppComponent_tr_25_Template, 8, 3, \"tr\", 11);\n          i0.ɵɵelementEnd()()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(7);\n          i0.ɵɵproperty(\"ngModel\", ctx.text);\n          i0.ɵɵadvance(3);\n          i0.ɵɵproperty(\"ngModel\", ctx.price);\n          i0.ɵɵadvance(15);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: [FormsModule, i1.DefaultValueAccessor, i1.NumberValueAccessor, i1.NgControlStatus, i1.NgModel, CommonModule, i2.NgForOf],\n      encapsulation: 2\n    });\n  }\n  return AppComponent;\n})();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}