{"ast":null,"code":"import { DataService } from './data.service';\n// Importing FormsModule to enable two-way data binding using [(ngModel)]\nimport { FormsModule } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./data.service\";\nfunction AppComponent_li_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\"\", item_r1.name, \" - \", item_r1.price, \"\");\n  }\n}\nlet AppComponent = /*#__PURE__*/(() => {\n  class AppComponent {\n    dataService;\n    items = [];\n    constructor(dataService) {\n      this.dataService = dataService;\n    }\n    ngOnInit() {\n      this.items = this.dataService.getData();\n      console.log('Items in ngOnInit:', this.items);\n    }\n    static ɵfac = function AppComponent_Factory(t) {\n      return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.DataService));\n    };\n    static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: AppComponent,\n      selectors: [[\"my-app\"]],\n      standalone: true,\n      features: [i0.ɵɵProvidersFeature([DataService]), i0.ɵɵStandaloneFeature],\n      decls: 3,\n      vars: 1,\n      consts: [[4, \"ngFor\", \"ngForOf\"]],\n      template: function AppComponent_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"div\")(1, \"ul\");\n          i0.ɵɵtemplate(2, AppComponent_li_2_Template, 2, 2, \"li\", 0);\n          i0.ɵɵelementEnd()();\n        }\n        if (rf & 2) {\n          i0.ɵɵadvance(2);\n          i0.ɵɵproperty(\"ngForOf\", ctx.items);\n        }\n      },\n      dependencies: [FormsModule],\n      encapsulation: 2\n    });\n  }\n  return AppComponent;\n})();\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}